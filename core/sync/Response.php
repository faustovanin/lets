<?php
    /**
     * File: Response.php
     * @author: Fausto Vanin <fnsvanin@yahoo.com.br
     * Description: This class represents the return of a call for any class
     *  that implements the method doAction (from the interface Observer).
     * It will contain the HTML generated by the observer to be appended to the
     *  target file to be sent to the client.
     * Release: July/2009
     *
    **/
    
    class Response {
        /**
         * @property string innerHTML The generated HTML
        **/
        protected $innerHTML;
        
        /**
         * @method <<constructor>> __constructor
        **/
        public function __construct(){
            
        }
        
        /**
         * @method void append Adds content to the object innerHTML
         * @param string data The content to be appended
        **/
        public function append($data){
            $this->innerHTML .= $data;
        }
        
        /**
         * @method string getInnerHTML Returns the object generated HTML
        **/
        public function getInnerHTML() {
            return $this->innerHTML;
        }
        
        /**
         * @method bool validate Validate the innerHTML
         * @return true if the code is valid and false otherwise
        **/
        public function validate(){
            return 1;
            $parser = xml_parser_create();
            $result = xml_parse($parser, $this->innerHTML, true);
            xml_parser_free($parser);
            return $result;
        }
        
        /**
         * @method void updateImage
         * @param String baseDir The base directory to update image src attribute
        **/
        public function updateImage($baseDir) {
            $document = new DOMDocument();
            @$document->loadHTML($this->innerHTML);
            
            $imageList = $document->getElementsByTagName("img");
            for($i=0; $i<$imageList->length; $i++) {
                $imageNode = $imageList->item($i);
                $src = $imageNode->getAttribute("src");
                $newSrc = $baseDir . "/" . $src;
                $imageNode->setAttribute("src", $newSrc);
            }
            
            $this->innerHTML = $document->saveHTML();
        }
    }
?>